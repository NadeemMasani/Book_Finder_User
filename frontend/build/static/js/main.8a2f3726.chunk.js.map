{"version":3,"sources":["Search/components/SearchBar.js","shared/Button.js","shared/Card.js","Search/components/BookItem.js","Search/components/BookList.js","shared/LoadingSpinner.js","shared/auth-context.js","Search/pages/home.js","shared/Backdrop.js","shared/Modal.js","shared/Map.js","Search/components/LibraryItem.js","Search/components/LibraryList.js","Search/pages/ListLibraries.js","shared/Navigation/MainHeader.js","shared/Navigation/NavLinks.js","shared/Navigation/SideDrawer.js","shared/Navigation/MainNavigation.js","Search/pages/Libraries.js","Search/components/Books/BookItem.js","Search/components/Books/BookList.js","Search/pages/ListBooks.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","placeholder","onChange","value","className","Button","props","href","size","inverse","danger","children","to","pathname","state","name","lng","lat","exact","type","onClick","disabled","Card","style","BookItem","author","category","isbn","id","BookList","items","length","map","book","_id","libraries","lib","publisher","LoadingSpinner","asOverlay","AuthContext","createContext","lattitude","longitude","setLat","setLng","Search","auth","useContext","useState","keyword","setKeyword","books","setBooks","isLoading","setIsLoading","lattitide","setLattitude","setLongitude","radio","setRadio","currentPage","setCurrentPage","postsPerPage","onSubmitHandler","event","a","preventDefault","url","process","fetch","response","json","data","useEffect","navigator","console","log","geolocation","getCurrentPosition","pos","coords","latitude","currentBooks","indexOfLastPost","indexOfFirstPost","slice","onChangeValue","target","Fragment","checked","onSubmit","e","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","Math","ceil","marginPagesDisplayed","pageRangeDisplayed","onPageChange","pageNumber","selected","containerClassName","activeClassName","pageClassName","previousClassName","nextClassName","pageLinkClassName","Backdrop","ReactDOM","createPortal","document","getElementById","ModalOverlay","content","headerClass","header","contentClass","footerClass","footer","Modal","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Map","mapRef","useRef","center","zoom","window","google","maps","current","Marker","position","ref","LibraryItem","showMap","setShowMap","closeMapHandler","address","location","city","country","distance","time","LibraryList","zip","ListLibraries","bookId","useParams","useLocation","loadedLibs","setLoadedLibs","fetchLibs","currentLibs","MainHeader","NavLinks","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Libraries","onDelete","onDeleteBook","ListBooks","lid","fetchBooks","App","useCallback","Provider","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.8a2f3726.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nconst SearchBar = ({ placeholder, onChange, value }) => {\r\n    return (\r\n        <input className=\"input\"\r\n            placeholder={placeholder}\r\n            onChange={onChange}\r\n            value={value}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={{\n          pathname: props.to,\n          state: {\n            name: props.name,\n            lng: props.lng,\n            lat: props.lat\n          }\n        }}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react'\r\nimport Card from '../../shared/Card';\r\nimport Button from '../../shared/Button';\r\nimport './BookItem.css';\r\n\r\nconst BookItem = props => {\r\n\r\n    // const showLibraries = () => {\r\n    //     console.log(props.libraries)\r\n    // };\r\n    return (\r\n        <li className='book_item'>\r\n            <Card>\r\n                <div className='book-position'>\r\n                    <div className='align-left'>\r\n                        <strong>{props.name}</strong>\r\n                        <br />\r\n                        <sub> Author : {props.author}</sub>\r\n                        <br />\r\n                        <sub> Category: {props.category}</sub>\r\n                        <br />\r\n                        <sub> ISBN No: {props.isbn}</sub>\r\n                    </div>\r\n                    <div className='align-right'>\r\n                        <Button to={`/books/${props.id}`} name={props.name} lat={props.lat} lng={props.lng} > See Available Libraries</Button>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        </li >\r\n    )\r\n}\r\n\r\nexport default BookItem\r\n","import React from 'react';\r\nimport BookItem from './BookItem';\r\nimport './BookList.css';\r\n\r\nconst BookList = props => {\r\n    if (props.items.length === 0) {\r\n        return (\r\n            <div className=\"no-books\">\r\n                <h2>No Books Found Please try a different Search</h2>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <ul className=\"books-list\">\r\n                {props.items.map(book => (\r\n                    <BookItem\r\n                        key={book._id}\r\n                        id={book._id}\r\n                        name={book.name}\r\n                        author={book.author}\r\n                        libraries={book.lib}\r\n                        isbn={book.isbn}\r\n                        category={book.category}\r\n                        publisher={book.publisher}\r\n                        lat={props.lat}\r\n                        lng={props.lng}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookList;","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  lattitude: null,\n  longitude: null,\n  setLat: () => { },\n  setLng: () => { }\n});\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport Button from \"../../shared/Button\";\r\nimport BookList from '../components/BookList';\r\nimport LoadingSpinner from '../../shared/LoadingSpinner';\r\nimport { AuthContext } from '../../shared/auth-context';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\n\r\n\r\n\r\nimport './home.css';\r\n\r\nconst Search = () => {\r\n    const auth = useContext(AuthContext);\r\n    const [keyword, setKeyword] = useState('');\r\n    const [books, setBooks] = useState();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [lattitide, setLattitude] = useState();\r\n    const [longitude, setLongitude] = useState();\r\n    const [radio, setRadio] = useState(\"name\");\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(5);\r\n\r\n\r\n\r\n\r\n\r\n    const onSubmitHandler = async (event) => {\r\n        event.preventDefault();\r\n        setIsLoading(true);\r\n        const url = `${process.env.REACT_APP_SERVER_URL}/api/search/${keyword}?lat=${lattitide}&lng=${longitude}&radio=${radio}`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        if (data.books) {\r\n            setBooks(data.books);\r\n        } else {\r\n            setBooks([]);\r\n        }\r\n        setIsLoading(false);\r\n        // send keyword to backend and get results;\r\n        // console.log(keyword);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (\"geolocation\" in navigator) {\r\n            console.log(\"avail\");\r\n            navigator.geolocation.getCurrentPosition((pos) => {\r\n                // console.log(pos.coords.latitude);\r\n                setLattitude(pos.coords.latitude);\r\n                setLongitude(pos.coords.longitude);\r\n                auth.setLat(pos.coords.latitude);\r\n                auth.setLng(pos.coords.longitude);\r\n            });\r\n        } else {\r\n            console.log(\"Not\");\r\n        }\r\n\r\n    }, []);\r\n\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    let currentBooks;\r\n    if (books) {\r\n        currentBooks = books.slice(indexOfFirstPost, indexOfLastPost);\r\n    }\r\n\r\n    const paginate = pageNumber => {\r\n        setCurrentPage(pageNumber.selected + 1);\r\n        console.log(pageNumber);\r\n    };\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"center\">\r\n                <LoadingSpinner />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const onChangeValue = (event) => {\r\n        console.log(event.target.value);\r\n        setRadio(event.target.value);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"radio\">\r\n                <input\r\n                    type=\"radio\"\r\n                    value=\"name\"\r\n                    name=\"name\"\r\n                    checked={radio === \"name\"}\r\n                    onChange={onChangeValue}\r\n                />\r\n                    Name/Author\r\n                    <input\r\n                    type=\"radio\"\r\n                    value=\"isbn\"\r\n                    name=\"isbn\"\r\n                    checked={radio === \"isbn\"}\r\n                    onChange={onChangeValue}\r\n                />\r\n                    ISBN Number\r\n                    <input\r\n                    type=\"radio\"\r\n                    value=\"category\"\r\n                    name=\"category\"\r\n                    checked={radio === \"category\"}\r\n                    onChange={onChangeValue}\r\n                />\r\n                    Category\r\n                </div>\r\n            <div className=\"search-container\">\r\n                <form onSubmit={onSubmitHandler} className='form-style'>\r\n\r\n                    <SearchBar\r\n                        placeholder=\"Search\"\r\n                        onChange={(e) => setKeyword(e.target.value)}\r\n                        value={keyword}\r\n                    />\r\n                    <Button type=\"submit\" disabled={keyword.length === 0} >\r\n                        Search\r\n                    </Button>\r\n\r\n                </form>\r\n\r\n            </div>\r\n            {!isLoading && books && lattitide && longitude && (<BookList items={currentBooks} lat={lattitide} lng={longitude} />)}\r\n            { books && books.length > 0 && <ReactPaginate\r\n                previousLabel={'previous'}\r\n                nextLabel={'next'}\r\n                breakLabel={'...'}\r\n                breakClassName={'break-me'}\r\n                pageCount={Math.ceil(books.length / 5)}\r\n                marginPagesDisplayed={3}\r\n                pageRangeDisplayed={5}\r\n                onPageChange={paginate}\r\n                containerClassName={'pagination'}\r\n                activeClassName={'active'}\r\n                pageClassName={'page-link'}\r\n                previousClassName={'prev-link'}\r\n                nextClassName={'next-link'}\r\n                pageLinkClassName={'a-link'}\r\n            />}\r\n\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React, { useRef, useEffect } from 'react';\n\nimport './Map.css';\n\nconst Map = props => {\n  const mapRef = useRef();\n  \n  const { center, zoom } = props;\n\n  useEffect(() => {\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: center,\n      zoom: zoom\n    });\n  \n    new window.google.maps.Marker({ position: center, map: map });\n  }, [center, zoom]);  \n\n  return (\n    <div\n      ref={mapRef}\n      className={`map ${props.className}`}\n      style={props.style}\n    ></div>\n  );\n};\n\nexport default Map;\n","import React, { useState } from 'react';\r\nimport Card from '../../shared/Card';\r\nimport './LibraryItem.css';\r\nimport Modal from '../../shared/Modal';\r\nimport Map from '../../shared/Map';\r\nimport Button from '../../shared/Button';\r\n\r\nconst LibraryItem = props => {\r\n    const [showMap, setShowMap] = useState(false);\r\n\r\n    const openMapHandler = () => setShowMap(true);\r\n\r\n    const closeMapHandler = () => setShowMap(false);\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                show={showMap}\r\n                onCancel={closeMapHandler}\r\n                header={props.address}\r\n                contentClass=\"place-item__modal-content\"\r\n                footerClass=\"place-item__modal-actions\"\r\n                footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n            >\r\n                <div className=\"map-container\">\r\n                    <Map center={props.location} zoom={16} />\r\n                </div>\r\n            </Modal>\r\n            <li className='lib_item'>\r\n                <Card>\r\n                    <div>\r\n                        <div className='align-left'>                        <strong>{props.name}</strong>\r\n                            <br />\r\n                            <sub> Address : {props.address}, {props.city}, {props.country}</sub>\r\n                            <br />\r\n                            <sub> Distance: {props.distance}</sub>\r\n                            <br />\r\n                            {props.time && (<sub> Driving Time : {props.time} </sub>)}\r\n                        </div>\r\n\r\n                        <div className='align-right'>\r\n                            <Button inverse onClick={openMapHandler}>\r\n                                VIEW ON MAP\r\n                            </Button>\r\n                            <Button to={`/${props.id}/books`}> Sell All Books</Button>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n            </li>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default LibraryItem\r\n","import React from 'react';\r\nimport LibraryItem from './LibraryItem';\r\nimport './LibraryList.css';\r\n\r\nconst LibraryList = props => {\r\n    if (props.items.length === 0) {\r\n        return (\r\n            <div >\r\n                <h2>No Libraries Found Please try a different Search</h2>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <ul >\r\n                {props.items.map(lib => (\r\n                    <LibraryItem\r\n                        key={lib._id}\r\n                        id={lib._id}\r\n                        name={lib.name}\r\n                        address={lib.address}\r\n                        location={lib.location}\r\n                        city={lib.city}\r\n                        zip={lib.zip}\r\n                        country={lib.country}\r\n                        distance={lib.distance}\r\n                        time={lib.time}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LibraryList;","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\n\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nimport LibraryList from '../components/LibraryList';\r\nimport LoadingSpinner from '../../shared/LoadingSpinner';\r\nimport './ListLibraries.css'\r\nconst ListLibraries = () => {\r\n    const bookId = useParams().id;\r\n    const location = useLocation();\r\n    const { name, lat, lng } = location.state;\r\n    const [loadedLibs, setLoadedLibs] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(5);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchLibs = async () => {\r\n\r\n            try {\r\n                setIsLoading(true);\r\n                console.log(lat);\r\n                const url = `${process.env.REACT_APP_SERVER_URL}/api/search/books/${bookId}?lat=${lat}&lng=${lng}`;\r\n                const response = await fetch(url);\r\n                const data = await response.json();\r\n                console.log(data.libraries);\r\n\r\n                setLoadedLibs(data.libraries);\r\n                setIsLoading(false);\r\n            } catch (err) {\r\n\r\n            }\r\n        };\r\n        fetchLibs();\r\n\r\n    }, [bookId, lat, lng]);\r\n\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentLibs = loadedLibs.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n\r\n    const paginate = pageNumber => {\r\n        setCurrentPage(pageNumber.selected + 1);\r\n        console.log(pageNumber);\r\n    };\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"center\">\r\n                <LoadingSpinner />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h2 className=\"book-name\">List of Libraries with Book : {name}</h2>\r\n            {!isLoading && loadedLibs && (<LibraryList items={currentLibs} />)}\r\n            <ReactPaginate\r\n                previousLabel={'previous'}\r\n                nextLabel={'next'}\r\n                breakLabel={'...'}\r\n                breakClassName={'break-me'}\r\n                pageCount={Math.ceil(loadedLibs.length / 5)}\r\n                marginPagesDisplayed={3}\r\n                pageRangeDisplayed={5}\r\n                onPageChange={paginate}\r\n                containerClassName={'pagination'}\r\n                activeClassName={'active'}\r\n                pageClassName={'page-link'}\r\n                previousClassName={'prev-link'}\r\n                nextClassName={'next-link'}\r\n                pageLinkClassName={'a-link'}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListLibraries\r\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          Search Books\n        </NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/libraries\" exact>\n          Libraires\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">Find Books in a Library Near you</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nimport './Libraries.css';\r\n// import Pagination from '../components/Pagination';\r\nimport LoadingSpinner from '../../shared/LoadingSpinner';\r\nimport LibraryList from '../components/LibraryList';\r\nimport { AuthContext } from '../../shared/auth-context';\r\n\r\n\r\nconst Libraries = () => {\r\n    const [loadedLibs, setLoadedLibs] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const auth = useContext(AuthContext);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(5);\r\n    useEffect(() => {\r\n        const fetchLibs = async () => {\r\n            try {\r\n                setIsLoading(true);\r\n                console.log(auth.lattitude);\r\n                console.log(auth.longitude);\r\n                const url = `${process.env.REACT_APP_SERVER_URL}/api/library?lat=${auth.lattitude}&lng=${auth.longitude}`;\r\n                const response = await fetch(url);\r\n                const data = await response.json();\r\n                console.log(data.libraries);\r\n\r\n                setLoadedLibs(data.libraries);\r\n\r\n                setIsLoading(false);\r\n            } catch (err) {\r\n\r\n            }\r\n        };\r\n        fetchLibs();\r\n\r\n    }, []);\r\n\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentLibs = loadedLibs.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const paginate = pageNumber => {\r\n        setCurrentPage(pageNumber.selected + 1);\r\n        console.log(pageNumber);\r\n    };\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"center\">\r\n                <LoadingSpinner />\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n\r\n        <div className='container'>\r\n\r\n            {!isLoading && loadedLibs && (<LibraryList items={currentLibs} />)}\r\n            {/* {<Pagination postsPerPage={postsPerPage}\r\n                totalPosts={loadedLibs.length}\r\n                paginate={paginate}\r\n                currentPage={currentPage} />} */}\r\n            <ReactPaginate\r\n                previousLabel={'previous'}\r\n                nextLabel={'next'}\r\n                breakLabel={'...'}\r\n                breakClassName={'break-me'}\r\n                pageCount={Math.ceil(loadedLibs.length / 5)}\r\n                marginPagesDisplayed={3}\r\n                pageRangeDisplayed={5}\r\n                onPageChange={paginate}\r\n                containerClassName={'pagination'}\r\n                activeClassName={'active'}\r\n                pageClassName={'page-link'}\r\n                previousClassName={'prev-link'}\r\n                nextClassName={'next-link'}\r\n                pageLinkClassName={'a-link'}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Libraries\r\n","import React, { useState, useContext } from 'react'\r\n\r\n// import { AuthContext } from '../context/auth-context';\r\n// import { useHttpClient } from '../hooks/http-hook';\r\nimport Card from '../../../shared/Card';\r\n// import Button from './FormElements/Button';\r\n// import Modal from '../components/UIElements/Modal';\r\n\r\n// import LoadingSpinner from '../components/UIElements/LoadingSpinner';\r\nimport './BookItem.css';\r\n\r\nconst BookItem = props => {\r\n    // const auth = useContext(AuthContext);\r\n    // const { isLoading, sendRequest } = useHttpClient();\r\n    // const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n    // const showDeleteWarningHandler = () => {\r\n    //     setShowConfirmModal(true);\r\n    // };\r\n\r\n    // const cancelDeleteHandler = () => {\r\n    //     setShowConfirmModal(false);\r\n    // };\r\n\r\n    // const confirmDeleteHandler = async () => {\r\n    //     setShowConfirmModal(false);\r\n    //     try {\r\n    //         await sendRequest(\r\n    //             `${process.env.REACT_APP_SERVER_URL}/api/library/book/${auth.libId}/${props.id}`,\r\n    //             'DELETE',\r\n    //             null,\r\n    //             {\r\n    //                 Authorization: 'Bearer ' + auth.token\r\n    //             }\r\n    //         );\r\n    //         props.onDelete(props.id);\r\n    //     } catch (err) { }\r\n    // };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {/* <Modal\r\n                show={showConfirmModal}\r\n                onCancel={cancelDeleteHandler}\r\n                header=\"Are you sure?\"\r\n                footerClass=\"place-item__modal-actions\"\r\n                footer={\r\n                    <React.Fragment>\r\n                        <Button inverse onClick={cancelDeleteHandler}>\r\n                            CANCEL\r\n                        </Button>\r\n                        <Button danger onClick={confirmDeleteHandler}>\r\n                            DELETE\r\n                        </Button>\r\n                    </React.Fragment>\r\n                }\r\n            >\r\n                <p>\r\n                    Do you want to proceed and delete this place? Please note that it\r\n                    can't be undone thereafter.\r\n            </p>\r\n            </Modal> */}\r\n            <li className='book_item'>\r\n                <Card>\r\n                    {/* {isLoading && <LoadingSpinner asOverlay />} */}\r\n                    <div className='book-position'>\r\n                        <div className='align-left'>\r\n                            <span>{props.name}</span>\r\n                            <br />\r\n                            <span>Author :  {props.author} </span>\r\n                            <br />\r\n                            <span>Category: {props.category}</span>\r\n                            <br />\r\n                            <span>ISBN No: {props.isbn}</span>\r\n                            <br />\r\n                        </div>\r\n                        {/* <div className='align-right'>\r\n                            <Button to={`/book/${props.id}`}> Update Book</Button>\r\n                            <Button danger onClick={showDeleteWarningHandler}> Delete Book</Button>\r\n                        </div> */}\r\n                    </div>\r\n                </Card>\r\n            </li >\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default BookItem\r\n","import React from 'react';\r\nimport BookItem from './BookItem';\r\nimport './BookList.css';\r\n\r\nconst BookList = props => {\r\n    if (props.items.length === 0) {\r\n        return (\r\n            <div className=\"no-books\">\r\n                <h2>No Books Found Please try a different Search</h2>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <ul className=\"books-list\">\r\n                <h4 className='list-name'> List of Current Books in the Library</h4>\r\n                {props.items.map(book => (\r\n                    <BookItem\r\n                        key={book.id}\r\n                        id={book.id}\r\n                        name={book.name}\r\n                        author={book.author}\r\n                        isbn={book.isbn}\r\n                        category={book.category}\r\n                        onDelete={props.onDeleteBook}\r\n                        publisher={book.publisher}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookList;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport BookList from '../components/Books/BookList';\r\nimport LoadingSpinner from '../../shared/LoadingSpinner';\r\nimport { AuthContext } from '../../shared/auth-context';\r\nimport ReactPaginate from 'react-paginate';\r\nimport './ListBooks.css';\r\nconst ListBooks = () => {\r\n    const auth = useContext(AuthContext);\r\n    const [books, setBooks] = useState();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(5);\r\n    const lid = useParams().lid;\r\n\r\n    useEffect(() => {\r\n        const fetchBooks = async () => {\r\n\r\n            setIsLoading(true);\r\n            console.log(lid);\r\n            console.log(auth.lattitude);\r\n            const url = `${process.env.REACT_APP_SERVER_URL}/api/library/${lid}/books`;\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            if (data.books) {\r\n                console.log(data.books);\r\n                setBooks(data.books);\r\n            } else {\r\n                setBooks([]);\r\n            }\r\n            setIsLoading(false);\r\n        }\r\n        fetchBooks();\r\n    }, [lid]);\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    let currentBooks;\r\n    if (books) {\r\n        currentBooks = books.slice(indexOfFirstPost, indexOfLastPost);\r\n    }\r\n\r\n    const paginate = pageNumber => {\r\n        setCurrentPage(pageNumber.selected + 1);\r\n        console.log(pageNumber);\r\n    };\r\n\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"center\">\r\n                <LoadingSpinner />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n\r\n        <div className='container'>\r\n            {!isLoading && books && (<BookList items={currentBooks} />)}\r\n            {books && books.length > 0 && <ReactPaginate\r\n                previousLabel={'previous'}\r\n                nextLabel={'next'}\r\n                breakLabel={'...'}\r\n                breakClassName={'break-me'}\r\n                pageCount={Math.ceil(books.length / 5)}\r\n                marginPagesDisplayed={3}\r\n                pageRangeDisplayed={5}\r\n                onPageChange={paginate}\r\n                containerClassName={'pagination'}\r\n                activeClassName={'active'}\r\n                pageClassName={'page-link'}\r\n                previousClassName={'prev-link'}\r\n                nextClassName={'next-link'}\r\n                pageLinkClassName={'a-link'}\r\n            />}\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default ListBooks;\r\n","import React, { useState, useCallback } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport Seacrh from \"./Search/pages/home\";\n\nimport ListLibraries from './Search/pages/ListLibraries';\nimport MainNavigation from './shared/Navigation/MainNavigation';\nimport Libraies from './Search/pages/Libraries';\nimport { AuthContext } from './shared/auth-context';\nimport ListBooks from './Search/pages/ListBooks';\n\nconst App = () => {\n\n  const [lattitude, setLattitude] = useState();\n  const [longitude, setLongitude] = useState();\n\n  const setLat = useCallback(lat => {\n    setLattitude(lat);\n  }, []);\n\n  const setLng = useCallback(lng => {\n    setLongitude(lng);\n  }, []);\n  return (\n    <AuthContext.Provider\n      value={{\n        lattitude: lattitude,\n        longitude: longitude,\n        setLat: setLat,\n        setLng: setLng\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <Switch>\n          <Route path=\"/\" exact>\n            <Seacrh />\n          </Route>\n          <Route path=\"/books/:id\" exact>\n            <ListLibraries />\n          </Route>\n          <Route path=\"/libraries\" exact>\n            <Libraies />\n          </Route>\n\n          <Route path=\"/:lid/books\" exact>\n            <ListBooks />\n          </Route>\n          <Redirect to=\"/\" />\n        </Switch>\n      </Router>\n    </AuthContext.Provider>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}